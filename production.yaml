apiVersion: v1
kind: Namespace
metadata:
  labels:
    author: jhonsfran
  name: production
---
apiVersion: v1
data:
  ALLOWED_HOSTS: localhost,*
  DATABASE: postgres
  DEBUG: "False"
  ENV: production
  HOST_DB: postgres
  PASSWORD_DB: postgres
  PORT_DB: "5432"
  SECRET_KEY: 6XyEvM9j!c?ETt@52y5-d@v*n_$kPFO8IyFxN-tWlTv8@cgE?f
  USER_DB: postgres
kind: ConfigMap
metadata:
  labels:
    author: jhonsfran
  name: app-config-h679mt2b6h
  namespace: production
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaguar-svc
    author: jhonsfran
  name: jaguar-svc
  namespace: production
spec:
  ports:
  - port: 8088
  selector:
    app: jaguar-app
    author: jhonsfran
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgres
    author: jhonsfran
  name: postgres
  namespace: production
spec:
  ports:
  - port: 5432
  selector:
    app: postgres
    author: jhonsfran
  type: NodePort
---
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    app: postgres
    author: jhonsfran
  name: postgres-pv-volume
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 5Gi
  hostPath:
    path: /mnt/data
  storageClassName: manual
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: postgres
    author: jhonsfran
  name: postgres-pv-claim
  namespace: production
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: manual
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaguar-app
    author: jhonsfran
  name: jaguar-app
  namespace: production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: jaguar-app
      author: jhonsfran
  template:
    metadata:
      labels:
        app: jaguar-app
        author: jhonsfran
      name: jaguar-app
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: app-config-h679mt2b6h
        image: jhonsfran/jaguar-api:latest
        imagePullPolicy: IfNotPresent
        name: jaguar-app
        ports:
        - containerPort: 8088
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 20m
            memory: 64Mi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    author: jhonsfran
  name: postgres
  namespace: production
spec:
  replicas: 1
  selector:
    matchLabels:
      author: jhonsfran
  template:
    metadata:
      labels:
        app: postgres
        author: jhonsfran
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: app-config-h679mt2b6h
        image: postgres:10.3
        imagePullPolicy: IfNotPresent
        name: postgres
        ports:
        - containerPort: 5432
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgredb
      volumes:
      - name: postgredb
        persistentVolumeClaim:
          claimName: postgres-pv-claim
